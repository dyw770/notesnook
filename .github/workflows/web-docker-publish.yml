name: Publish Docker notesnook-web

on: workflow_dispatch

env:
  IMAGE_NAME: dyw770/notesnook-web

jobs:
  build:
    name: Publish Docker Web Image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: ./.github/actions/setup-node-with-cache

      - name: Install packages
        run: |
          npm ci --ignore-scripts --prefer-offline --no-audit
          npm run bootstrap -- --scope=web

      - name: Collect package metadata
        id: package_metadata
        working-directory: ./apps/monograph
        run: |
          echo ::set-output name=app_version::$(cat package.json | jq -r .version)
          echo "name=$(cat package.json | jq -r .version)" >> $GITHUB_OUTPUT

      - name: Generate build
        run: npm run build:web

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v8

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          ecr: auto
          logout: true

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: apps/web
          file: apps/web/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v8
          tags: ${{ env.IMAGE_NAME }}:${{ steps.package_metadata.outputs.app_version }},${{ env.IMAGE_NAME }}:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: index.docker.io/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ env.IMAGE_NAME }}
          short-description: "Notesnook self host web client"
          enable-url-completion: true
